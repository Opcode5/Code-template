#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define mp make_pair
#define fast ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define filein freopen("input.txt","r",stdin)
#define fileout freopen("output.txt","w",stdout)
using namespace std;
const int mx=1e5+9; 
int n,m;
int ara[mx];
int block;
struct query
{
    int l,r,id;
}q[mx];
ll ans[mx];
int cnt[mx]; 
int anss=0; 
bool comp(query a, query b)
{
    if(a.l/block!=b.l/block) return  a.l/block<b.l/block;
    return a.r<b.r;
}
void add(int ind)
{
   if(cnt[ara[ind]]==0) anss++; 
    cnt[ara[ind]]++; 
}
void _remove(int ind)
{  
   if(cnt[ara[ind]]==1) anss--; 
    cnt[ara[ind]]--; 
}
void MO()
{
   anss=0; 
    int l=0,r=-1;
    for(int i=0;i<m;i++)
    {
        int left=q[i].l;
        int right=q[i].r;
        left--; right--; 
        while(l<left) _remove(l++);
        while(l>left)  add(--l);
        while(r<right) add(++r);
        while(r>right) _remove(r--);
        ans[q[i].id]=anss; 
        //cout<<left<<' '<<right<<' '<<anss<<endl ;
    }
}
int  main()
{
	///complexity: O(n*sqrt(n)+q*sqrt(n))
   fast; 
   int cs=1; 
   int t; cin>>t;
   while(t--){
      memset(cnt,0,sizeof cnt);
    cin>>n>>m;
    for(int i=0;i<n;i++) cin>>ara[i];
    for(int i=0;i<m;i++)
    {
        cin>>q[i].l>>q[i].r;
        q[i].id=i;
    }
    block=sqrtl(n);
    sort(q,q+m,comp);
    MO();
    cout<<"Case "<<cs++<<":"<<endl; 
    for( int i=0;i<m;i++)
    {
        cout<<ans[i]<<endl;
    }
   }
}
