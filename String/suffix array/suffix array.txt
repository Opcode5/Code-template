#include <bits/stdc++.h>
#define ull unsigned long long
#define ll long long
#define endl '\n'
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define line cout<<"----------------------------------"<<endl
#define fast ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define filein freopen("input.txt","r",stdin)
#define fileout freopen("output.txt","w",stdout)
using namespace std; 
struct SA
{
    vector<int> sa, lcp;
    SA(){}; 
    void build(string& s, int lim = 256) 
    { 
        int n = s.size() + 1, k = 0, a, b;
        vector<int> x(s.begin(), s.end() + 1), y(n), ws(max(n, lim)), rank(n);
        sa = lcp = y;
        iota(sa.begin(), sa.end(), 0);

        for (int j = 0, p = 0; p < n; j = max(1, j * 2), lim = p) 
        {
            p = j, iota(y.begin(), y.end(), n - j);
            for (int i = 0; i <= n - 1; i++) 
            {
                if (sa[i] >= j) y[p++] = sa[i] - j;    
            } 
            fill(ws.begin(), ws.end(), 0);
            for (int i = 0; i <= n - 1; i++) ws[x[i]]++;
            for (int i = 1; i <= lim - 1; i++) ws[i] += ws[i - 1];
            for (int i = n; i--;) sa[--ws[x[y[i]]]] = y[i];
            swap(x, y), p = 1, x[sa[0]] = 0;
            for (int i = 1; i <= n - 1; i++) 
            {
                a = sa[i - 1], b = sa[i]; 
                x[b] = (y[a] == y[b] && y[a + j] == y[b + j]) ? p - 1 : p++;
            }
        }
        for (int i = 1; i <= n - 1; i++) rank[sa[i]] = i;
        for (int i = 0, j; i < n - 1; lcp[rank[i++]] = k)
        {
            for (k && k--, j = sa[rank[i] - 1]; s[i + k] == s[j + k]; k++);
        }
        for(int i=1;i<n-1;i++) lcp[i]=lcp[i+1]; 
        lcp[n-1]=0;
    }
}sa;  
int main() 
{
    fast; 
    string str; 
    cin>>str; 
    sa.build(str);  
    ll n=(int)str.size();
    long long ans=n*(n+1)/2; 
    for(auto x: sa.lcp) ans-=x; 
    cout<<ans<<endl; 
}
