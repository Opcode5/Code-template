#include<bits/stdc++.h>
#define ull unsigned long long
#define ll long long
#define pb push_back
#define endl '\n'
#define line cout<<"----------------------"<<endl
#define mp make_pair
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL)
#define filein freopen("input.txt","r",stdin)
#define fileout freopen("output.txt","w",stdout)
using namespace std;
///complexity nlogn
///no need to clear any ara before every test case
#define MAX 100010
string str;
ll n, m;
ll ra[MAX], tempra[MAX];
ll sa[MAX], tempsa[MAX];
ll c[MAX];

void countSort(ll k) {
	ll i, sum, maxi = max(300LL, n);
	memset(c, 0, sizeof c);
	for (i = 0; i < n; i++)
    c[i + k < n ? ra[i + k] : 0]++;
	for (i = sum = 0; i < maxi; i++) {
		ll t = c[i];
		c[i] = sum;
		sum += t;
	}
	for (i = 0; i < n; i++)
		tempsa[c[sa[i] + k < n ? ra[sa[i] + k] : 0]++] = sa[i];
	for (i = 0; i < n; i++)
		sa[i] = tempsa[i];
}

void makeSA() {
	ll i, k, r;
	for (i = 0; i < n; i++) {
		ra[i] = str[i];
		sa[i] = i;
	}
	for (k = 1; k < n; k <<= 1) {
		countSort(k);
		countSort(0);
		tempra[sa[0]] = r = 0;
		for (i = 1; i < n; i++)
			tempra[sa[i]] =	(ra[sa[i]] == ra[sa[i - 1]] && ra[sa[i] + k] == ra[sa[i - 1] + k]) ? r : ++r;
		for (i = 0; i < n; i++)
			ra[i] = tempra[i];
	}
}
ll temp[100009];
ll lcp[100009]; ///lcp[i] is the length of longest common prefix of suf[i] and suf[i+1]
void build_lcp() ///it takes O(n) times
{
    for(ll i=0;i<n;i++) temp[sa[i]]=i;
    ll k=0;
    for(ll i=0;i<n;i++)
    {
        if(temp[i]==n-1)
        {
            lcp[temp[i]]=0;
            k=0; continue;
        }
        ll j=sa[temp[i]+1];
        while(i+k<n and j+k<n and str[i+k]==str[j+k]) k++;
        lcp[temp[i]]=k;
        if(k) k--;
    }
}
void solve()
{
    ll ans=0 ;
    int strlen=n-1;
    for(ll i=1;i<n;i++)
    {
        ans+=strlen-sa[i]-lcp[i-1];
    }
    cout<<ans<<endl ;
}
int  main() {
    ll t;
    cin>>t;
    while(t--){
		cin>>str;
		str+='$'; ///always need to add this for nlogn implementation
		n = str.size();
		makeSA();
		build_lcp() ;
		solve();
    }
}
